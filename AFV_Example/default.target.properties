# last updated by SSDDeployer utility...
# Mon May 22 17:55:37 CDT 2017
#Wed May 10 15:41:41 CDT 2017
debugPort=8000
debugTransport=dt_socket
%%ECLIPSE_PASS%%=admin
%%ECLIPSE_URL%%=http\://192.168.118.35\:8080/identityiq
%%ECLIPSE_USER%%=spadmin

%%LDAP_TARGET_NAME%%=Ldap
%%LDAP_USERS_OU%%=ou=notpeople,dc=sailpoint, dc=sp
%%LDAP_TOP_LEVEL_DN%%=ou=notpeople,dc=sailpoint, dc=sp
%%LDAP_CN_SOURCE_FIELD%%=uid
%%LDAP_SEARCH_DN%%=ou=people,dc=sailpoint, dc=sp


############# ACTIVE DIRECTORY PROPERTIES ####################

%%AD_ADMINISTRATOR_NAME%%=cn=spadmin,ou=people,dc=sailpoint,dc=com
%%AD_PROXY_PASSWORD%%=Admin123
%%AD_TARGET_NAME%%=Virtual Active Directory
%%AD_ATT_OBJECTCLASS_VALUE%%=User

#Configure option for each method so that you don't have to uncomment/comment anything in FV XML
#	 * Option 1 - identity Name
#	 * Option 2 - CN is of format LastName, FirstName
#	 * 					Set AD_CN_UNIQUENESS_VALUE to true to check for uniqueness 
#	 * Option 3 - Lastname, Firstname Initials.
%%AD_OPTION_CN%%=1
%%AD_CN_UNIQUENESS_VALUE%%=true
%%AD_OPTION_DESCRIPTION%%=1

#	 * Option 1 - Returns a String with the date the identity was Created/Updated/Disabled
#	 * Option 2 - Will return the value of attribute 'description'
#	 * 					Name identity's attribute name as 'description' to allow this method to work properly
#	 * Option 3 - Returns a String composed by several attributes 
#	 * 					Use comma separated values to set the attributes that will compose the value in AD_DESCRIPTION_COMPOSED_VALUES
#	 * 					Configure AD_DESCRIPTION_DELIM_VALUE with the escaped delimiter to be used to compose the value
%%AD_OPTION_DESCRIPTION%%=1
%%AD_DESCRIPTION_DELIM_VALUE%%= - 
%%AD_DESCRIPTION_COMPOSED_VALUES%%=companyCode,department

#	 * Option 1 - Returns identity.getDisplayName
#	 * Option 2 - Will return CN value without '\\' in case you're using thi format
#	 * Option 3 - Will return a String in the format lastName, firstName or lastName, preferredName if configured
%%AD_OPTION_DISPLAYNAME%%=1

# * Option 1 - Returns a String of format: CN=firstname lastname (Name)
#	 * Option 2 - Concatenate cn + dn
%%AD_OPTION_DISTINGUISHEDNAME%%=1
%%AD_ATT_DN_VALUE%%=ou=people,dc=sailpoint,dc=com

# * Option 1 - Returns identity.getAttribute("employeeType")
#	 * 					Name identity's attribute name as 'employeeType' to allow this method to work properly
#	 * Option 2 - Will return a personalized String depending on AD_ATT_EMPLOYEETYPE_VALUE
#	 * 					Needs editing of implementation
%%AD_OPTION_EMPLOYEETYPE%%=1
%%AD_ATT_EMPLOYEETYPE_VALUE%%=identityType


#  * Option 1 - Returns the value of recommended attribute name (middleName)
#	 * 					Name identity's attribute name as 'middleName' to allow this method to work properly
#	 * Option 2 - Converts middleName to an initial --> Mary = M. 
%%AD_OPTION_MIDDLENAME%%=1

#	 * Option 1 - Will return sailpoint.object.Identity.getEmail()
#	 * Option 2 - Will generate an email of format: firstname.lastname@suffix
#	 * 					This option needs to set AD_ATT_SUFFIX_EMAIL in properties
%%AD_OPTION_MAIL%%=1
%%AD_ATT_SUFFIX_EMAIL%%=sailpoint.sp

#	 * Option 1 - Return the manager's identity object
#	 * Option 2 - Will look for 'managerIdentity' in the application context 
#	 * 					This option needs property AD_TARGET_NAME to be set with the name of the Active Directory Application name
#	 * Option 3 - Returns the distinguishedName of the manager
#	 * 					This option needs property AD_TARGET_NAME to be set with the name of the Active Directory Application name
#	 * Option 4 - Return manager's identity name : sailpoint.object.Identity.getManager().getName()
#	 * Option 5 - Returns the distinguishedName of a manager within a specific doman
#	 * 					This option needs property AD_TARGET_NAME to be set with the name of the Active Directory Application name
#	 * 					This option needs property AD_MANAGERS_DOMAIN to be set with the Active Directory Domain Name where managers will be looked for
%%AD_OPTION_MANAGER%%=1
%%AD_MANAGERS_DOMAIN%%=manager

#	 * Option 1 - Name identity's attribute name as 'memberOf' to allow this method to work properly
#	 * Option 2 - Returns a predefined group if attribute 'employeeType' starts with that predefined group or returns a default group when given
#	 * 					This option needs property AD_MAIN_GROUP to be set with the name of the Active Directory Main Group 
%%AD_OPTION_MEMBEROF%%=1
%%AD_MAIN_GROUP%%=employee

#  * Option 1 - Returns a predefined value
#	 * 					This method needs AD_ATT_ORG_UNIT_VALUE to be configured in properties
#	 * Option 2 - Name identity's attribute name as 'ou' to allow this method to work properly
#	 * Option 3 - Implement a getPersonnelAreaCityBasedOu() method to allow this method to work properly
%%AD_OPTION_OU%%=1
%%AD_ATT_ORG_UNIT_VALUE%%=SailPoint

#	 * Option 1 - Returns encrypted password
#	 * Option 2 - Generates passwords based on policies in the PasswordPolicy objects
#	 * Option 3 - Default password from properties
#	 * Option 4 - Will try to decrypt identity's password
%%AD_OPTION_PASSWORD%%=1
%%AD_PASSWORD_POLICY%%=Policy-EDPassword
%%AD_ATT_PASSWORD_VALUE%%=LueZu\\7e